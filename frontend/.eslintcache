[{"C:\\Users\\Matt\\Desktop\\coding\\tldr-react\\frontend\\src\\index.js":"1","C:\\Users\\Matt\\Desktop\\coding\\tldr-react\\frontend\\src\\App.js":"2","C:\\Users\\Matt\\Desktop\\coding\\tldr-react\\frontend\\src\\components\\NavBar.js":"3","C:\\Users\\Matt\\Desktop\\coding\\tldr-react\\frontend\\src\\components\\Search.js":"4","C:\\Users\\Matt\\Desktop\\coding\\tldr-react\\frontend\\src\\components\\SearchResults.js":"5","C:\\Users\\Matt\\Desktop\\coding\\tldr-react\\frontend\\src\\components\\News.js":"6","C:\\Users\\Matt\\Desktop\\coding\\tldr-react\\frontend\\src\\components\\NewsCard.js":"7","C:\\Users\\Matt\\Desktop\\coding\\tldr-react\\frontend\\src\\components\\Trending.js":"8"},{"size":278,"mtime":1609132407365,"results":"9","hashOfConfig":"10"},{"size":986,"mtime":1609570227987,"results":"11","hashOfConfig":"10"},{"size":163,"mtime":1609569710663,"results":"12","hashOfConfig":"10"},{"size":1568,"mtime":1611124743722,"results":"13","hashOfConfig":"10"},{"size":236,"mtime":1611125588730,"results":"14","hashOfConfig":"10"},{"size":307,"mtime":1611128686785,"results":"15","hashOfConfig":"10"},{"size":1977,"mtime":1611128740665,"results":"16","hashOfConfig":"10"},{"size":655,"mtime":1612677465920,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"9tkiko",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Matt\\Desktop\\coding\\tldr-react\\frontend\\src\\index.js",[],["36","37"],"C:\\Users\\Matt\\Desktop\\coding\\tldr-react\\frontend\\src\\App.js",[],"C:\\Users\\Matt\\Desktop\\coding\\tldr-react\\frontend\\src\\components\\NavBar.js",[],"C:\\Users\\Matt\\Desktop\\coding\\tldr-react\\frontend\\src\\components\\Search.js",[],"C:\\Users\\Matt\\Desktop\\coding\\tldr-react\\frontend\\src\\components\\SearchResults.js",[],"C:\\Users\\Matt\\Desktop\\coding\\tldr-react\\frontend\\src\\components\\News.js",[],"C:\\Users\\Matt\\Desktop\\coding\\tldr-react\\frontend\\src\\components\\NewsCard.js",["38"],"import axios from 'axios';\r\nimport React, {useState, useEffect} from 'react';\r\nimport './news.css'\r\n\r\nfunction NewsCard({articleData}){\r\n    const [summary, setSummary] = useState('');\r\n\r\n    useEffect(() => {\r\n        setSummary('');\r\n    },[articleData.title])\r\n\r\n    function convertDate(){\r\n        var rawDate = articleData.publishedAt;\r\n        var Months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\r\n        var year = rawDate.slice(0,4);\r\n        var temp = parseInt(rawDate.slice(5,7));\r\n        var month = Months[temp-1];\r\n        var day;\r\n        rawDate[8]==='0' ? day=rawDate[0] : day=rawDate.slice(8,10);\r\n        return (day + ' ' + month + ' ' + year)\r\n    }\r\n\r\n    function openURL(){\r\n        window.open(articleData.url, \"_blank\"); \r\n    }\r\n\r\n    function summarize(){\r\n        var data = {\r\n            url: articleData.url\r\n        }\r\n        axios.post('/summarize', data)\r\n        .then((response) => {\r\n            // document.getElementById(articleData.url).innerText += response.data;\r\n            setSummary(response.data);\r\n        })\r\n    }\r\n\r\n    var publishDate = convertDate();\r\n    // console.log('Article data for ' + articleData.title)\r\n    // console.log(articleData);\r\n    \r\n    return(\r\n        <div className=\"newsContainer\">\r\n            <div className=\"articleInfo\">\r\n                <img onClick={openURL} src={articleData.urlToImage}></img>\r\n                <div className=\"title\">\r\n                    <p onClick={openURL}>{articleData.title}</p>\r\n                    <div className=\"smallText\">Author: {articleData.author}</div>\r\n                    <div className=\"smallText\">Published: {publishDate}</div>\r\n                </div>\r\n                <button onClick={summarize} className=\"orangeButton centerVert dim\">tl;dr</button>  \r\n            </div>\r\n            \r\n            <div className=\"summary\">{summary}</div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default NewsCard;","C:\\Users\\Matt\\Desktop\\coding\\tldr-react\\frontend\\src\\components\\Trending.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":45,"column":17,"nodeType":"45","endLine":45,"endColumn":69},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]